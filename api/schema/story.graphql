fragment StoryDetailParts on Story {
  text
  image
  createdAt
  isLive
  creatorId
  collaboratorIds
  creator {
    id
    username
    profilePicture
  }
  onMap
}

query story($id: ID!) {
  story(id: $id) {
    id
    ...StoryDetailParts
  }
}

query stories($id: ID!, $next: String, $limit: Int!) {
  stories(id: $id, next: $next, limit: $limit) {
    id
    ...StoryDetailParts
  }
}

query storiesOnMap($lng: Float!, $lat: Float!, $radius: Float!) {
  storiesOnMap(lng: $lng, lat: $lat, radius: $radius) {
    id
    ...StoryDetailParts
  }
}

query storyLive($creatorId: String) {
  storyLive(creatorId: $creatorId) {
    id
    ...StoryDetailParts
  }
}

query storyTracks($id: ID!) {
  storyTracks(id: $id) {
    ...TrackParts
  }
}

mutation storyCreate(
  $text: String!
  $location: LocationInput
  $tracks: [ID!]!
) {
  storyCreate(text: $text, location: $location, tracks: $tracks) {
    id
    ...StoryDetailParts
  }
}

mutation storyUpdate($id: ID!, $text: String, $location: LocationInput) {
  storyUpdate(id: $id, text: $text, location: $location) {
    id
    ...StoryDetailParts
  }
}

mutation storyDelete($id: ID!) {
  storyDelete(id: $id)
}

mutation storyUnlive($id: ID!) {
  storyUnlive(id: $id) {
    id
    ...StoryDetailParts
  }
}

query storyUsers($id: ID!) {
  storyUsers(id: $id)
}

mutation storyPing($id: ID!) {
  storyPing(id: $id)
}

subscription storyUpdated($id: ID!) {
  storyUpdated(id: $id) {
    id
    ...StoryDetailParts
  }
}

subscription storyUsersUpdated($id: ID!) {
  storyUsersUpdated(id: $id)
}

query storyInviteLink($id: ID!) {
  storyInviteLink(id: $id)
}

mutation storyCollabAddFromToken($id: ID!, $token: String!) {
  storyCollabAddFromToken(id: $id, token: $token)
}
